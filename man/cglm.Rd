% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cglm.R
\name{cglm}
\alias{cglm}
\title{Fit Generalized Models to cluster correlated data}
\usage{
cglm(formula, family = gaussian, data, weights, subset, na.action,
  start = NULL, etastart, mustart, offset, control = list(...),
  model = TRUE, method = "glm.fit", x = FALSE, y = TRUE,
  contrasts = NULL, cluster = NULL, use_alg = TRUE, ...)
}
\arguments{
\item{formula}{an object of class \code{"\link{formula}"} (or one that
    can be coerced to that class): a symbolic description of the
    model to be fitted.  The details of model specification are given
    under \sQuote{Details}.}

\item{family}{a description of the error distribution and link
    function to be used in the model.  For \code{glm} this can be a
    character string naming a family function, a family function or the
    result of a call to a family function.  For \code{glm.fit} only the
    third option is supported.  (See \code{\link{family}} for details of
    family functions.)}

\item{data}{an optional data frame, list or environment (or object
    coercible by \code{\link{as.data.frame}} to a data frame) containing
    the variables in the model.  If not found in \code{data}, the
    variables are taken from \code{environment(formula)},
    typically the environment from which \code{glm} is called.}

\item{weights}{an optional vector of \sQuote{prior weights} to be used
    in the fitting process.  Should be \code{NULL} or a numeric vector.}

\item{subset}{an optional vector specifying a subset of observations
    to be used in the fitting process.}

\item{na.action}{a function which indicates what should happen
    when the data contain \code{NA}s.  The default is set by
    the \code{na.action} setting of \code{\link{options}}, and is
    \code{\link{na.fail}} if that is unset.  The \sQuote{factory-fresh}
    default is \code{\link{na.omit}}.  Another possible value is
    \code{NULL}, no action.  Value \code{\link{na.exclude}} can be useful.}

\item{start}{starting values for the parameters in the linear predictor.}

\item{etastart}{starting values for the linear predictor.}

\item{mustart}{starting values for the vector of means.}

\item{offset}{this can be used to specify an \emph{a priori} known
    component to be included in the linear predictor during fitting.
    This should be \code{NULL} or a numeric vector of length equal to
    the number of cases.  One or more \code{\link{offset}} terms can be
    included in the formula instead or as well, and if more than one is
    specified their sum is used.  See \code{\link{model.offset}}.}

\item{control}{a list of parameters for controlling the fitting
    process.  For \code{glm.fit} this is passed to
    \code{\link{glm.control}}.}

\item{model}{a logical value indicating whether \emph{model frame}
    should be included as a component of the returned value.}

\item{method}{the method to be used in fitting the model.  The default
    method \code{"glm.fit"} uses iteratively reweighted least squares
    (IWLS): the alternative \code{"model.frame"} returns the model frame
    and does no fitting.

    User-supplied fitting functions can be supplied either as a function
    or a character string naming a function, with a function which takes
    the same arguments as \code{glm.fit}.  If specified as a character
    string it is looked up from within the \pkg{stats} namespace.
  }

\item{x}{For \code{glm}:
    logical values indicating whether the response vector and model
    matrix used in the fitting process should be returned as components
    of the returned value.

    For \code{glm.fit}: \code{x} is a design matrix of dimension
    \code{n * p}, and \code{y} is a vector of observations of length
    \code{n}.
  }

\item{y}{For \code{glm}:
    logical values indicating whether the response vector and model
    matrix used in the fitting process should be returned as components
    of the returned value.

    For \code{glm.fit}: \code{x} is a design matrix of dimension
    \code{n * p}, and \code{y} is a vector of observations of length
    \code{n}.
  }

\item{contrasts}{an optional list. See the \code{contrasts.arg}
    of \code{model.matrix.default}.}

\item{cluster}{A vector or factor indicating from which cluster the
respective loglikelihood contributions from \code{loglik} originate.
Must have the same length as the vector returned by \code{loglik}.
If \code{cluster} is not supplied then it is set inside
\code{\link[chandwich]{adjust_loglik}} under the assumption that
each observation forms its own cluster.}

\item{use_alg}{A logical scalar.  Whether or not to provide to
\code{\link[chandwich]{adjust_loglik}} via the arguments
\code{alg_deriv} and \code{alg_hess} functions to evalulate
the derivatives (scores) of the loglikelihood with respect to the
parameters and the Hessian of the loglikelihood respectively.}

\item{...}{
    For \code{glm}: arguments to be used to form the default
    \code{control} argument if it is not supplied directly.

    For \code{weights}: further arguments passed to or from other methods.
  }
}
\value{
An object of class \code{"chandwich"}, returned by
  \code{\link[chandwich]{adjust_loglik}}.  The function
  \code{\link{summary}} (i.e. \code{\link[chandwich]{summary.chandwich}})
  can be used to obtain or print a summary of the results.
  The function \code{\link[chandwich]{conf_intervals}} can be used to
  calculate confidence intervals for each parameter.
  \code{\link[chandwich]{plot.confint}} can be used to illustrate the
  an individual confidence interval in a plot.
  The function \code{\link[chandwich]{conf_region}}, and its plot method
  \code{\link[chandwich]{plot.confreg}}, can be used to plot confidence
  regions for pairs of parameters.
}
\description{
\code{cglm} has the same functionality as \code{\link[stats]{glm}}
except that cluster correlated data can be analyzed using the methodology
of \href{http://dx.doi.org/10.1093/biomet/asm015}{Chandler and Bate (2007)},
implemented by the \code{\link[chandwich]{chandwich}} package.
}
\details{
Three adjustments to the independence loglikelihood described in
  Chandler and Bate (2007) are available.  The vertical adjustment is
  described in Section 6 and two horizontal adjustments are described
  in Sections 3.2 to 3.4.  See the descriptions of \code{type} and, for the
  horizontal adjustments, the descriptions of \code{C_cholesky} and
  \code{C_spectral}, in the documentation of
  \code{\link[chandwich]{adjust_loglik}}.

  The adjustments involve first and second derivatives of the loglikelihood
  with respect to the model parameters.  If \code{use_alg = FALSE} then
  these are estimated using \code{\link[numDeriv]{jacobian}} and
  \code{\link[stats:optim]{optimHess}}.

  If the argument \code{cluster} is not provided then the adjustment to the
  loglikelihood is based on a robust sandwich estimator for the covariance
  matrix of the parameter estimators, under the assumption that each
  observation forms its own cluster.

  If you only wish to adjust parameter covariance matrices, that is,
  you are not interested in an adjusted loglikelihood, then the
  \href{https://CRAN.R-project.org/package=sandwich}{sandwich} package
  will provide equivalent results and is more flexible than
  \code{chandwichGLM}.  The vignettes in the sandwich package give a very
  clear account of this general area.
}
\examples{
## Example from the help file for stats::glm()
## Dobson (1990) Page 93: Randomized Controlled Trial :
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
d.AD <- data.frame(treatment, outcome, counts)
glm.D93 <- glm(counts ~ outcome + treatment, family = poisson())
cglm1 <- cglm(counts ~ outcome + treatment, family = poisson(),
              cluster = 1:nrow(d.AD))
cglm2 <- cglm(counts ~ outcome + treatment, family = poisson(),
              cluster = 1:nrow(d.AD), use_alg = FALSE)
summary(glm.D93)
summary(cglm1)
summary(cglm2)

# Confidence intervals for each parameter
cints <- chandwich::conf_intervals(cglm1)
cints
plot(cints, which_par = 2)

# A confidence region for a pair of parameters
conf <- chandwich::conf_region(cglm1, which_pars = 1:2)
plot(conf, conf = c(50, 75, 95, 99))
}
\references{
Chandler, R. E. and Bate, S. (2007). Inference for clustered
  data using the independence loglikelihood. \emph{Biometrika},
  \strong{94}(1), 167-183. \url{http://dx.doi.org/10.1093/biomet/asm015}
}
\seealso{
\code{\link[stats]{glm}},
  \code{\link[chandwich]{chandwich}},
  \code{\link[chandwich]{adjust_loglik}}.
}
